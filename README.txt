# REFLECTION

## Development Choices
For my proposal I had a scene consisting of a monitor stand, the monitor itself, books, a hygrometer that could be made using cubes, a diamond-shaped paper weight, and a tennis ball. This desk is located in my office, and I thought the objects would be suitable practice; if I couldnâ€™t make the exact same shape, I could at least try, like the sphere and the diamond, which were the ones I had the most trouble with. The Diamond especially, since it is composed of three different parts. I wanted to make sure that I could recreate the scene as accurately as possible, so I took a lot of time to study the shapes and proportions of the objects. I was finally able to recreate the scene, and I am proud of the outcome, even if it took me longer than most people to achieve the results I sought. Applying texture was a part where I had to use my creativity for real. How would I write all the tiniest numbers and symbols on the hygrometer? And where would I find the foil details on the book cover? The answer was simple, I just took pictures of the objects in real life and used them as their own texture. I thank my husband for encouraging me to at least try and see what would happen (and it worked perfectly in my humble opinion).

## Navigation

In controlling the camera system of my 3D scene, I utilized a combination of GLFW_KEY controls and mouse movements. The keys A, W, S, D, Q & E were used to control the body movement of the camera while the mouse was used for vision movement. The zoom feature on the mouse also allows users to get closer or further away from an object in their virtual environment, similar to how one would change focal length when using a real-life camera.
Lastly, I incorporated another key control (P) that enables users to view their scenario in a 2D format if they so choose. Holding down this key keeps them viewing it as such until they release it and return back into full 3D immersion once again. These features serve not only practical purposes but also enhance user experience within any given virtual space by allowing for greater freedom and flexibility in navigation controls.

## Custom Functions

The most efficient way to make my code program reusable was to apply object-oriented programming, since it contained multiple custom functions. With minor changes only required when manipulating values like ranges associated with vertices/indices needed for movement/animation effects within any given scene, these functions can be reused to create new scenarios or to modify existing ones. My code program had multiple custom functions, and the most efficient way to make it reusable was by applying object-oriented programming, creating classes and defining public / private specifiers. The vertices and indices were the first custom functions I implemented. One of my favorite custom functions involved adding glm::rotation commands to models within my scene. Using these commands effectively, I was able to move each object in the scene with greater precision along the x,y,z axes and rotate them at 90-degree angles for better representation within my desktop scene.
